<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task-4.0.xsd">
	<!-- 实施配置总入口 -->
	<context:property-placeholder
		location="file:D:/eclipse/workspace_v3/fitImplementConf.properties" /> 
	<!-- 配置连接池 -->  
    <bean id="masterDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"  
        destroy-method="close">  
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}"></property>
		<property name="acquireIncrement" value="${jdbc.acquireIncrement}"></property>
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
		<property name="minPoolSize" value="${jdbc.minPoolSize}"></property>
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}"></property>
		<property name="maxStatements" value="${jdbc.maxStatements}"></property>
		<property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts}"></property>
		<property name="breakAfterAcquireFailure" value="${jdbc.breakAfterAcquireFailure}"></property>
		<property name="preferredTestQuery" value="${jdbc.validationQuery}"></property>
    </bean>  
      
    <!-- 配置连接池 -->  
    <bean id="slave01DataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"  
        destroy-method="close">  
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}"></property>
		<property name="acquireIncrement" value="${jdbc.acquireIncrement}"></property>
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
		<property name="minPoolSize" value="${jdbc.minPoolSize}"></property>
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}"></property>
		<property name="maxStatements" value="${jdbc.maxStatements}"></property>
		<property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts}"></property>
		<property name="breakAfterAcquireFailure" value="${jdbc.breakAfterAcquireFailure}"></property>
		<property name="preferredTestQuery" value="${jdbc.validationQuery}"></property>
    </bean>  
    
    <!-- 定义数据源，使用自己实现的数据源 -->  
    <bean id="dataSource" class="com.bw.fit.common.dynamicdatasource.DynamicDataSource">  
        <!-- 设置多个数据源 -->  
        <property name="targetDataSources">  
            <map key-type="java.lang.String">  
                <!-- 这个key需要和程序中的key一致 -->  
                <entry key="master" value-ref="masterDataSource"/>  
                <entry key="slave" value-ref="slave01DataSource"/>  
            </map>  
        </property>  
        <!-- 设置默认的数据源，这里默认走写库 -->  
        <property name="defaultTargetDataSource" ref="masterDataSource"/>  
    </bean>  
    
	<!-- 配置mybitasSqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation"
			value="classpath:com/bw/fit/system/common/conf/dao-persistence-config.xml"></property>
		<property name="mapperLocations" >
			<list>
				<value>classpath:com/bw/fit/*/*/dao/sqlConf/*Conf.xml</value>
			</list>
		</property>	
	</bean>

	<!-- 配置SqlSessionTemplate -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 使用tx/aop来配置 -->
	<aop:config>
		<!-- 通过aop定义事务增强切面 -->
		<aop:pointcut id="serviceMethod"
			expression="execution(* com.bw.fit.*.*.service.impl.*.*(..))" />
		<!-- 引用事务增强 -->
		<aop:advisor pointcut-ref="serviceMethod" advice-ref="txPointcut" /> 
		
        <aop:aspect ref="dataSourceAspect" order="-9999">  
            <aop:before method="before" pointcut-ref="txPointcut" />  
        </aop:aspect>  
	</aop:config>
	<aop:config>
		<!-- 通过aop定义事务增强切面 -->
		<aop:pointcut id="daoMethod"
			expression="execution(* com.bw.fit.*.*.dao.impl.*.*(..))" />
		<!-- 引用事务增强 -->
		<aop:advisor pointcut-ref="daoMethod" advice-ref="txPointcut" />
		
		<!-- 将切面应用到自定义的切面处理器上，-9999保证该切面优先级最高执行 -->  
        <aop:aspect ref="dataSourceAspect" order="-9999">  
            <aop:before method="before" pointcut-ref="txPointcut" />  
        </aop:aspect>  
	</aop:config>
    <bean class="com.bw.fit.common.dynamicdatasource.DataSourceAspect" id="dataSourceAspect">  
           <!-- 指定事务策略 -->  
           <property name="txAdvice" ref="txPointcut"/>  
           <!-- 指定slave方法的前缀（非必须） -->  
           <property name="slaveMethodStart" value="query,qry,find,get,check"/>  
    </bean>  
	<!--事务增强 -->
	<tx:advice id="txPointcut" transaction-manager="transactionManager">
		<!-- 事务属性定义 -->
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="send*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="create*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="edit*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="roll*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="start*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="suspend*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	
	

</beans> 